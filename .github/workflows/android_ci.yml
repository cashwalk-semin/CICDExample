name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]  # PR Ïù¥Î≤§Ìä∏ Ï∂îÍ∞Ä

jobs:
    android_ci:
        name: Android CI
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: '17'
                  distribution: 'temurin'
                  cache: gradle

            - name: Grant execute permission for gradlew
              run: chmod +x gradlew

            - name: Build with Gradle
              run: ./gradlew assembleDebug

            - name: Install ktlint
              run: |
                  curl -sSLO https://github.com/pinterest/ktlint/releases/download/1.4.1/ktlint &&
                  chmod a+x ktlint
                  sudo mv ktlint /usr/local/bin/

            - name: Fetch specific branch
              run: |
                    git fetch origin master:tmp-master

            - name: Run ktlint on changed lines
              run: |
                    CHANGED_FILES2=$(git diff --name-only origin/master)
                    echo CHANGED_FILES2
                    CHANGED_FILES=$(git diff --name-only origin/master | grep '\.kt$' || true)

                    # Î≥ÄÍ≤ΩÎêú ÌååÏùºÏù¥ ÏóÜÏúºÎ©¥ Ï¢ÖÎ£å
                    if [ -z "$CHANGED_FILES" ]; then
                        echo "‚úÖ No Kotlin files changed. Skipping ktlint."
                        exit 0
                    fi

                    # ktlint Ïã§Ìñâ
                    echo "üîç Running ktlint on changed files..."
                    FAILED=false

                    if [ -n "$CHANGED_FILES" ]; then
                        echo "Running ktlint on changed lines..."

                        for FILE in $CHANGED_FILES; do
                            echo "Processing file: $FILE"
                            CHANGED_LINES=$(git diff -U0 origin/develop -- "$FILE" | grep '^@@' | sed -n 's/^@@.*\+//p' | cut -d' ' -f1) || true
                            ALL_ERRORS=$(ktlint --relative "$FILE" | grep "$FILE" || true)

                            for LINE in $CHANGED_LINES; do
                                START=$(echo "$LINE" | cut -d',' -f1)
                                LENGTH=$(echo "$LINE" | awk -F',' '{print ($2 == "" ? "" : $2)}')

                                if [ -z "$LENGTH" ] || [ "$LENGTH" -eq 0 ]; then
                                    LENGTH=1
                                fi

                                for CURRENT_LINE in $(seq $START $((START + LENGTH - 1))); do
                                    LINE_ERRORS=$(echo "$ALL_ERRORS" | grep -E "$FILE:$CURRENT_LINE")

                                    if [ -n "$LINE_ERRORS" ]; then
                                        echo "‚ùå $LINE_ERRORS"
                                        FAILED=true
                                    fi
                                done
                            done
                        done
                    else
                        echo "No Kotlin files changed."
                    fi

                    # ktlintÏóêÏÑú Î¨∏Ï†úÍ∞Ä ÏûàÏúºÎ©¥ Ïª§Î∞ã Ï∞®Îã®
                    if [ "$FAILED" = true ]; then
                        echo "‚ùå ktlint found issues. Please fix them before committing."
                        exit 1
                    fi

                    echo "‚úÖ All files passed ktlint check."
                    exit 0

            - name: Show ktlint Report
              if: failure()
              run: cat app/build/reports/ktlint/ktlintMainSourceSetCheck/ktlintMainSourceSetCheck.txt

